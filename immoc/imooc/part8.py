# https://www.imooc.com/learn/177  第八章 学习

# 切片

L = ['Adam', 'Lisa', 'Bart', 'Paul']
# 取前面三个元素
# L[0:3]表示，从索引0开始取，直到索引3为止，但不包括索引3。即索引0，1，2，正好是3个元素。
print(L[0:3])

# 如果第一个索引是0，还可以省略：
print(L[:3])

# 只用一个 : ，表示从头到尾：  因此，L[:]实际上复制出了一个新list。
print(L[:])

# 切片操作还可以指定第三个参数：
# 第三个参数表示每N个取一个，下面的 L[::2] 会每两个元素取出一个来，也就是隔一个取一个。
print(L[::2])

# 任务
# range()函数可以创建一个数列：
#
# >>> range(1, 101)
# [1, 2, 3, ..., 100]
# 请利用切片，取出：
#
# 1. 前10个数；
# 2. 3的倍数；
# 3. 不大于50的5的倍数。

L = []
for x in range(1, 101):
    L.append(x)
print(L[:10])
print(L[2::3], ', 共', L[2::3].__len__(), '个')
print(L[4:51:5])

### 倒序切片
L = ['Adam', 'Lisa', 'Bart', 'Paul']
print(L)
print(L[-2:])
print(L[:-2])
print(L[-3:-1])
print(L[-4:-1:2])
# 不存在的下标
print(L[-6:-2])
# 开始大于结尾
print(L[-1:-4])

# 任务
# 利用倒序切片对 1 - 100 的数列取出：
# * 最后10个数；
# * 最后10个5的倍数。
L = []
for x in range(1, 101):
    L.append(x)
# 最后10个数；
print(L[-10:])
# 最后10个5的倍数。
print(L[-46::5])

### 字符串切片
print('ABCDEFG'[:3])
print('ABCDEFG'[-3:])
print('ABCDEFG'[::2])


# 任务
# 字符串有个方法 upper() 可以把字符变成大写字母：
# >>> 'abc'.upper()
# 'ABC'
# 但它会把所有字母都变成大写。请设计一个函数，它接受一个字符串，然后返回一个仅首字母变成大写的字符串。
# 提示：利用切片操作简化字符串操作。

def change(s):
    return s[0].upper() + s[1:]


print(change('hello'))
